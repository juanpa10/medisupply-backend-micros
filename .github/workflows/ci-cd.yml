name: CI & CD to AWS ECR (monorepo)

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || 'medisupply' }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

jobs:
  test_build_push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
              # ==== :::::::::::::::::::::::::: ====
              # ==== AcÃ¡ van la lista de micros ====
              # ==== :::::::::::::::::::::::::: ====
    strategy:
      matrix:
        include:
          - name: auth-service
            context: ./auth-service
          - name: resource-api
            context: ./resource-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # === TESTS (Python por servicio) ===
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (${{ matrix.name }})
        working-directory: ${{ matrix.context }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run unit tests (${{ matrix.name }})
        working-directory: ${{ matrix.context }}
        run: |
          if compgen -G "tests/**.py" > /dev/null; then pytest -q; else echo "No tests found, skipping"; fi

      # === AWS OIDC ===
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # === Docker metadata (prefijo por servicio) ===
      - name: Docker metadata (${{ matrix.name }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=sha,prefix=${{ matrix.name }}-
            type=ref,event=branch,prefix=${{ matrix.name }}-
            type=raw,value=${{ matrix.name }}-latest,enable={{is_default_branch}}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
